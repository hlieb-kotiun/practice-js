{"version":3,"file":"index.js","sources":["../src/main.js"],"sourcesContent":["// TASK 1\n\n// Якщо імейл і пароль користувача збігаються, зберігайте дані з форми при сабміті\n// у локальне сховище і змінюй кнопку login на logout і роби поля введення\n// Недоступними для змін.\n\n// При перезавантаженні сторінки, якщо користувач залогінений, ми маємо бачити logout-кнопку\n// та недоступні для зміни поля з даними користувача.\n// Клік по кнопці logout повертає все до початкового вигляду і видаляє дані користувача\n// З локального сховища.\n\n// Якщо введені дані не збігаються з потрібними даними, викликати аlert і\n// повідомляти про помилку.\n\n// const USER_DATA = {\n//   email: 'user@mail.com',\n//   password: 'secret',\n// };\n\n// const LS_KEY = 'user-data';\n\n// const form = document.querySelector('.login-form');\n// const email = document.querySelector('[name=\"email\"]');\n// const password = document.querySelector('[name=\"password\"]');\n// const button = document.querySelector('.login-form button');\n\n// form.addEventListener('submit', handleSubmit);\n\n// function handleSubmit(event) {\n//   event.preventDefault();\n\n//   const emailValue = email.value.trim();\n//   const passwordValue = password.value.trim();\n\n//   if (button.textContent === 'Logout') {\n//     form.reset();\n//     localStorage.removeItem(LS_KEY);\n//     button.textContent = 'Login';\n//     email.removeAttribute('readonly');\n//     password.removeAttribute('readonly');\n//     return;\n//   }\n\n//   if (emailValue === '' || passwordValue === '') {\n//     return alert('Fill all fields!');\n//   }\n\n//   if (emailValue === USER_DATA.email && passwordValue === USER_DATA.password) {\n//     localStorage.setItem(\n//       LS_KEY,\n//       JSON.stringify({ email: emailValue, password: passwordValue })\n//     );\n\n//     button.textContent = 'Logout';\n//     email.setAttribute('readonly', true);\n//     password.setAttribute('readonly', true);\n//   } else {\n//     alert('Wrong data!');\n//   }\n// }\n\n// if (localStorage.getItem(LS_KEY)) {\n//   const loginData = JSON.parse(localStorage.getItem(LS_KEY));\n//   email.value = loginData.email || '';\n//   password.value = loginData.password || '';\n//   button.textContent = 'Logout';\n//   email.setAttribute('readonly', true);\n//   password.setAttribute('readonly', true);\n// }\n\n// ЗАВДАННЯ 2\n\n// - Використовуй prompt та повертай значення звідти.\n// - Створи функцію, яка буде набувати значення з prompt і повертатиме проміс.\n// Якщо значення не є числом, відхиляй проміс та логіруй \"error\".\n// Якщо значення парне, вирішуй проміс та повертай \"even\" через 1 секунду.\n// Якщо значення не парне, вирішуй проміс та повертай \"odd\" через 2 секунди.\n\n// const promptValue = prompt('Enter value');\n\n// function handlePrompt(promptValue) {\n//   return new Promise((resolve, reject) => {\n//     const promptValueNum = Number(promptValue);\n//     if (isNaN(promptValueNum)) {\n//       reject('error');\n//     }\n//     if (promptValueNum % 2 === 0) {\n//       setTimeout(() => {\n//         resolve('even');\n//       }, 1000);\n//     }\n//     if (promptValueNum % 2) {\n//       setTimeout(() => {\n//         resolve('odd');\n//       }, 2000);\n//     }\n//   });\n// }\n// handlePrompt(promptValue)\n//   .then(response => console.log(response))\n//   .catch(error => console.log(error));\n\n//   ЗАВДАННЯ 3\n\n// Додай відображення дати і часу в реальному часі\n// <!-- Task 3 -->\n// <p class=\"date\">Current data and time: <span></span></p>\n\n// const setDate = document.querySelector('.date span');\n// update();\n// function update (){\n//     setDate.textContent=new Date().toLocaleString(\"en-US\");\n\n// }\n\n// setInterval(update, 1000);\n\n// ЗАВДАННЯ 4\n\n// Напишіть функцію calculateAge(birthDate), яка приймає дату народження у форматі YYYY-MM-DD і повертає поточний вік.\n// Підказка: Використайте об'єкт Date для обчислення різниці між сьогоднішньою датою і датою народження.\n\n// function calculateAge(birthDate) {\n//   const currentDate = new Date();\n//   const birth = new Date(birthDate);\n//   let difference = currentDate.getFullYear() - birth.getFullYear();\n\n//   const month = currentDate.getMonth() - birth.getMonth();\n//   const day = currentDate.getDate() - birth.getDate();\n\n//   if (month < 0 || (day < 0 && month === 0)) {\n//     difference -= 1;\n//   }\n\n//   return difference;\n// }\n\n// console.log(calculateAge('2005-03-10'));\n// console.log(calculateAge('2005-11-25'));\n// console.log(calculateAge('2005-12-10'));\n\n// ЗАДАЧА 3\n\n// Зробити перемикач теми. Зберігати тему у локальному сховище.\n// При перезавантаженні сторінки перевіряти сховище та ставити тему, яка там вказана.\n// Додати класи для змін тем\n\nconst input = document.querySelector('.checkbox');\n\nconst STYLE_PAGE = 'theme';\n\ninput.addEventListener('change', changeStyle);\n\nfunction changeStyle(event) {\n  if (event.target.checked) {\n    document.body.classList.add('dark');\n\n    localStorage.setItem(STYLE_PAGE, 'dark');\n\n    document.body.classList.remove('light');\n  } else {\n    document.body.classList.add('light');\n\n    localStorage.setItem(STYLE_PAGE, 'light');\n\n    document.body.classList.remove('dark');\n  }\n}\n\nif (localStorage.getItem(STYLE_PAGE) === 'dark') {\n  document.body.classList.add('dark');\n  document.body.classList.remove('light');\n  input.checked = true;\n}\n"],"names":["input","STYLE_PAGE","changeStyle","event"],"mappings":"oDAmJA,MAAMA,EAAQ,SAAS,cAAc,WAAW,EAE1CC,EAAa,QAEnBD,EAAM,iBAAiB,SAAUE,CAAW,EAE5C,SAASA,EAAYC,EAAO,CACtBA,EAAM,OAAO,SACf,SAAS,KAAK,UAAU,IAAI,MAAM,EAElC,aAAa,QAAQF,EAAY,MAAM,EAEvC,SAAS,KAAK,UAAU,OAAO,OAAO,IAEtC,SAAS,KAAK,UAAU,IAAI,OAAO,EAEnC,aAAa,QAAQA,EAAY,OAAO,EAExC,SAAS,KAAK,UAAU,OAAO,MAAM,EAEzC,CAEI,aAAa,QAAQA,CAAU,IAAM,SACvC,SAAS,KAAK,UAAU,IAAI,MAAM,EAClC,SAAS,KAAK,UAAU,OAAO,OAAO,EACtCD,EAAM,QAAU"}